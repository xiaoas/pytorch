name: Upload test stats

on:
  workflow_run:
    workflows: [pull, trunk, periodic]
    types:
      - completed

jobs:
  upload-test-stats:
    if: github.event.workflow_run.conclusion == 'success' || github.event.workflow_run.conclusion == 'failure'
    runs-on: [self-hosted, linux.2xlarge]
    name: Upload test stats for ${{ github.event.workflow_run.id }}, attempt ${{ github.event.workflow_run.run_attempt }}

    steps:
      - name: Print workflow information
        env:
          TRIGGERING_WORKFLOW: ${{ toJSON(github.event.workflow_run) }}
        run: echo "${TRIGGERING_WORKFLOW}"

      - name: Checkout PyTorch
        uses: pytorch/pytorch/.github/actions/checkout-pytorch@master

      - run: |
          pip3 install requests==2.26
          pip3 install rockset==0.8.3
          pip3 install boto3==1.19.12
          pip3 install six==1.16.0

      - name: Upload test stats
        env:
          ROCKSET_API_KEY: ${{ secrets.ROCKSET_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WORKFLOW_RUN_ID: ${{ github.event.workflow_run.id }}
          WORKFLOW_RUN_ATTEMPT: ${{ github.event.workflow_run.run_attempt }}
          WORKFLOW_URL: ${{ github.event.workflow_run.html_url }}
        run: |
          echo "${WORKFLOW_URL}"
          python3 tools/stats/upload_test_stats.py --workflow-run-id "${WORKFLOW_RUN_ID}" --workflow-run-attempt "${WORKFLOW_RUN_ATTEMPT}"
          python3 tools/stats/upload_sccache_stats.py --workflow-run-id "${WORKFLOW_RUN_ID}" --workflow-run-attempt "${WORKFLOW_RUN_ATTEMPT}"

  check-api-rate:
    if: ${{ always() }}
    runs-on: [self-hosted, linux.2xlarge]
    continue-on-error: true
    steps:
      - name: Get our GITHUB_TOKEN API limit usage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -H "Accept: application/vnd.github.v3+json" -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/rate_limit
